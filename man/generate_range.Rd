% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate-range.R
\name{generate_range}
\alias{generate_range}
\title{Generate range polygons from an abundance raster}
\usage{
generate_range(x, smooth = TRUE)
}
\arguments{
\item{x}{\code{RasterStack}; the input raster to convert to polygons.}

\item{smooth}{logical; whether to smooth the polygons and drop small
fragments consisting of single raster cells. Smoothing is done via the
\code{smoothr} package. If \code{smooth = TRUE}, but the raw and smoothed polygons
are returned as separate features.}
}
\value{
An \code{sf} object containing the polygons defining the range. The range
prediction area will each be encoded as a single feature distinguished by
the \code{type} attribute. In addition, if \code{smooth = TRUE}, smoothed versions
of these features will be generated and distinguished by the \code{smoothed}
attribute. The \code{layer} attribute will contain the name of the raster
layer that has been converted to polygons.
}
\description{
Generate polygons encompassing the non-zero extent of a raster stack,
typically one giving the abundance of a species for different seasons or
weeks. In addition, polygons defining the extent of prediction area (i.e. the
region where the raster has some non-missing value, including zero) will be
generated.
}
\details{
The raw polygons will have sharp edges since they're being
converted from a square raster grid; however, by using \code{smooth = TRUE}, a set
of smooth polygons will be generated to more closely resemble the range
polygons seen in file guides. \strong{Warning:} polygonizing the highest
resolution abundance data will take an extremely long time, it's best to use
the medium or low resolution data.
}
\examples{
\donttest{
# download example data
path <- ebirdst_download("example_data")
# or get the path if you already have the data downloaded
path <- get_species_path("example_data")

# load seasonal abundance
abd <- load_raster(path, product = "abundance_seasonal", resolution = "lr")

# convert to ranges
range_polygons <- generate_range(abd)
}
}
